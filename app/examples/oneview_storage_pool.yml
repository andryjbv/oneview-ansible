###
# Copyright (2016-2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: all
  vars:
    config: "{{ playbook_dir }}/oneview_config.json"
    contents: "{{lookup('file', config)}}"
  tasks:
    - name: Get currentVersion from URL
      oneview_version_facts:
        config: "{{ config }}" 
      delegate_to: localhost
      when: contents.api_version|length == 0
      register: version
   
    - name: Print currentVersion if an apiVersion is not specified in config file
      set_fact: 
        currentVersion: "{{ version.ansible_facts.version.currentVersion|int }}"
      when: contents.api_version|length == 0

    - name: Print currentVersion if an apiVersion is specified in config file
      set_fact: 
        currentVersion: contents.api_version | string
      when: contents.api_version|length != 0

    - name: Gather facts about a Storage System by name
      oneview_storage_system_facts:
        config: "{{ config }}"
        name: "{{ contents.storage_system_name }}"
      delegate_to: localhost

    - debug: var=storage_systems

    # To manage/unmanage a storage pool, issue a PUT with the isManaged attribute set as true to manage or false to unmanage.
    - name: Ensure the Storage Pool '{{ contents.storage_pool_name }}' is not managed
      oneview_storage_pool:
        config: "{{ config }}"
        state: present
        data:
           storageSystemUri: "{{ storage_systems[0]['uri'] }}"
           name: '{{ contents.storage_pool_name }}'
           isManaged: False
      delegate_to: localhost
      when: (storage_systems is not none or storage_systems is not undefined)

    - name: Ensure the Storage Pool '{{ contents.storage_pool_name }}' is managed
      oneview_storage_pool:
        config: "{{ config }}"
        state: present
        data:
           storageSystemUri: "{{ storage_systems[0]['uri'] }}"
           name: '{{ contents.storage_pool_name }}'
           isManaged: True
      delegate_to: localhost
      when: (storage_systems is not none and storage_systems is not undefined)
