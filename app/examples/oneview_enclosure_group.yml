###
# Copyright (2016-2021) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: all
  vars:
    config: "{{ playbook_dir }}/oneview_config.json"
    variant: "Synergy"
    ip_range: False
    lig_name: LIG
  tasks:
    - name: Gather facts about logical interconnect group
      oneview_logical_interconnect_group_facts:
        config: "{{ config }}"
        name: "{{ lig_name }}"
      delegate_to: localhost
    - set_fact:
        lig_uri: "{{ logical_interconnect_groups[0]['uri'] }}"

    - name: Create an Enclosure Group
      oneview_enclosure_group:
        config: "{{ config }}"
        state: present
        data:
            name: "{{ item.name }}"
            ipAddressingMode: "External"
            ipv6AddressingMode: "External"
            enclosureCount: 3
            osDeploymentSettings:
              manageOSDeployment: true
              deploymentModeSettings:
                deploymentMode: "Internal"
            interconnectBayMappings:
              - interconnectBay: 3
                logicalInterconnectGroupUri: "{{ lig_uri }}"
              - interconnectBay: 6
                logicalInterconnectGroupUri: "{{ lig_uri }}"
      delegate_to: localhost
      with_items:
        - { name: 'EG' }
        - { name: 'Enclosure Group 1' }

    # Run this exampleto create enclosure group with interconnects having ip rangeUris
    - name: Create an Enclosure Group with ip rangeUris
      oneview_enclosure_group:
        config: "{{ config }}"
        state: present
        data:
            name: "EG_with_ip_range"
            ipAddressingMode: "IpPool"
            ipRangeUris:
              - /rest/id-pools/ipv4/ranges/d4321a21-42b5-4a1e-9c44-9e8bf9339dfa
            ipv6AddressingMode: "External"
            enclosureCount: 3
            osDeploymentSettings:
              manageOSDeployment: true
              deploymentModeSettings:
                deploymentMode: "Internal"
            interconnectBayMappings:
              - interconnectBay: 3
                logicalInterconnectGroupUri: "{{ lig_uri }}"
              - interconnectBay: 6
                logicalInterconnectGroupUri: "{{ lig_uri }}"
      delegate_to: localhost
      when: ip_range == 'True'

    - name: Do nothing with the Enclosure Group when no changes are provided
      oneview_enclosure_group:
        config: "{{ config }}"
        state: present
        data:
            name: "Enclosure Group 1"
            ipAddressingMode: "External"
            ipv6AddressingMode: "External"
            enclosureCount: 3
            osDeploymentSettings:
              manageOSDeployment: true
              deploymentModeSettings:
                deploymentMode: "Internal"
            interconnectBayMappings:
              - interconnectBay: 3
                logicalInterconnectGroupUri: "{{ lig_uri }}"
              - interconnectBay: 6
                logicalInterconnectGroupUri: "{{ lig_uri }}"
      delegate_to: localhost

    - name: Update the Enclosure Group changing the name attribute
      oneview_enclosure_group:
        config: "{{ config }}"
        state: present
        data:
            name: "Enclosure Group 1"
            newName: "Enclosure Group 1 (renamed)"
      delegate_to: localhost

    # This play is compatible with C7000 Enclosures
    - name: Update the Enclosure Group configuration script
      oneview_enclosure_group:
        config: "{{ config }}"
        state: present
        data:
            name: "Enclosure Group 1 (renamed)"
            configurationScript: "# script (updated)"
      delegate_to: localhost
      when: variant == "C7000"

    - name: Delete the Enclosure Group
      oneview_enclosure_group:
        config: "{{ config }}"
        state: absent
        data:
          name: "Enclosure Group 1 (renamed)"
      delegate_to: localhost

    - name: Do nothing when Enclosure Group is absent
      oneview_enclosure_group:
        config: "{{ config }}"
        state: absent
        data:
          name: "Enclosure Group 1 (renamed)"
      delegate_to: localhost
      delegate_to: localhost
