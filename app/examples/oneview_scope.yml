###
# Copyright (2016-2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- hosts: all
  vars:
    config: "{{ playbook_dir }}/oneview_config.json"
    contents: "{{lookup('file', config)}}"
  tasks:
    - name: Get currentVersion from URL
      oneview_version_facts:
        config: "{{ config }}" 
      delegate_to: localhost
      when: contents.api_version|length == 0
      register: version
   
    - name: Print currentVersion if an apiVersion is not specified in config file
      set_fact: 
        currentVersion: "{{ version.ansible_facts.version.currentVersion | int }}"
      when: contents.api_version|length == 0

    - name: Print currentVersion if api version is specified in config file
      set_fact: 
        currentVersion: contents.api_version | string
      when: contents.api_version|length != 0

    - name: Gather facts about all Ethernet Networks
      oneview_ethernet_network_facts:
        config: "{{ config }}"
      delegate_to: localhost

    - debug: var=ethernet_networks

    - name: Create a scope
      oneview_scope:
        config: '{{ config }}'
        state: present
        data:
          name: "{{ contents.scope_name }}"
          addedResourceUris:
            - "{{ ethernet_networks[0]['uri'] }}"
            - "{{ ethernet_networks[1]['uri'] }}"
          removedResourceUris:
            - "{{ ethernet_networks[2]['uri'] }}"
      delegate_to: localhost

    - name: Create a scope when exists
      oneview_scope:
        config: '{{ config }}'
        state: present
        data:
          name: "{{ contents.scope_name }}"
          addedResourceUris:
            - "{{ ethernet_networks[0]['uri'] }}"
            - "{{ ethernet_networks[1]['uri'] }}"
          removedResourceUris:
            - "{{ ethernet_networks[2]['uri'] }}"
      delegate_to: localhost

    - name: Update the scope name
      oneview_scope:
        config: '{{ config }}'
        state: present
        data:
          name: "{{ contents.scope_name }}"
          newName: "{{ contents.scope_name }}_Renamed"
          addedResourceUris:
            - "{{ ethernet_networks[2]['uri'] }}"
          removedResourceUris:
            - "{{ ethernet_networks[1]['uri'] }}"
      delegate_to: localhost

    # This method is available only for api versin 300 and is non-idempotent
    - name: Update the scope resource assignments, adding a resource
      oneview_scope:
        config: '{{ config }}'
        state: resource_assignments_updated
        data:
          name: "{{ contents.scope_name }}_Renamed"
          resourceAssignments:
            addedResourceUris: "{{ ethernet_networks[0]['uri'] }}"
      delegate_to: localhost
      when: currentVersion == '300'

    # This method is available only for api versin 300 and is non-idempotent
    - name: Update the scope resource assignments, removing two resources
      oneview_scope:
        config: '{{ config }}'
        state: resource_assignments_updated
        data:
          name: "{{ contents.scope_name }}_Renamed"
          resourceAssignments:
            removedResourceUris:
              - "{{ ethernet_networks[0]['uri'] }}"
              - "{{ ethernet_networks[1]['uri'] }}"
      delegate_to: localhost
      when: currentVersion == '300'
 
    - name: Delete the Scope
      oneview_scope:
        config: '{{ config }}'
        state: absent
        data:
          name: "{{ contents.scope_name }}_Renamed"
      delegate_to: localhost

    - name: Create a scope to ensure continuity for an automation script
      oneview_scope:
        config: '{{ config }}'
        state: present
        data:
          name: "{{ contents.scope_name }}"
      delegate_to: localhost
